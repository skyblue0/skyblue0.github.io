<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <url>/2017/08/05//404.html/</url>
      <content type="html"><![CDATA[<html>
<head>
  <meta http-equiv="content-type" content="text/html;charset=utf-8;">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="robots" content="all">
  <meta name="robots" content="index,follow">
</head>
<body>


<script type="text/javascript" src="http://www.qq.com/404/search_children.js" charset="utf-8" homepageurl="https://skyblue0.github.io/" homepagename="回到我的主页"></script>



</body>
</html>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Jcrop2.x（图片剪裁）插件使用教程]]></title>
      <url>/2016/12/10/Jcrop2-x%EF%BC%88%E5%9B%BE%E7%89%87%E5%89%AA%E8%A3%81%EF%BC%89%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="Jcrop2-x（图片剪裁）插件使用教程"><a href="#Jcrop2-x（图片剪裁）插件使用教程" class="headerlink" title="Jcrop2.x（图片剪裁）插件使用教程"></a>Jcrop2.x（图片剪裁）插件使用教程</h1><pre><code>最近项目中用到了图片裁切上传，可是没接触过，不知用啥插件好，于是便上百度搜了一下，找到了 Jcrop2.x的插件。下面说一下使用心得与使用的基本步骤。
</code></pre><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><h3 id="一、文件下载"><a href="#一、文件下载" class="headerlink" title="一、文件下载"></a>一、文件下载</h3><pre><code>首先说明一下，最好使用Jcrop2.0版本以上的，因为2.0以下的版本用户体验一点都不友好，其中有很多的坑，慎用！
</code></pre><ol>
<li>进入官网找到“Download Jcrop”点击进入<br><a href="http://jcrop.org/" target="_blank" rel="external">官网地址</a><br><a href="http://jcrop.org/doc/quickstart" target="_blank" rel="external">官方文档</a></li>
<li>点击左上方的Download Jcrop2.x进行下载，如下图<img src="/2016/12/10/Jcrop2-x（图片剪裁）插件使用教程/download.png" alt="[下载]" title="[下载]">
<h3 id="二、使用步骤"><a href="#二、使用步骤" class="headerlink" title="二、使用步骤"></a>二、使用步骤</h3></li>
<li><p>文件引入</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">方法<span class="number">1</span>： CDN引入</div><div class="line">&lt;script src=<span class="string">"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;script src=<span class="string">"http://jcrop-cdn.tapmodo.com/v2.0.0-RC1/js/Jcrop.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"http://jcrop-cdn.tapmodo.com/v2.0.0-RC1/css/Jcrop.css"</span> type=<span class="string">"text/css"</span>&gt;</div><div class="line">方法<span class="number">2</span>： 本地引入</div><div class="line">&lt;script src=<span class="string">"libs/jquery/1.10.2/jquery.min.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;script src=<span class="string">"libs/Jcrop/js/Jcrop.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"libs/Jcrop/css/Jcrop.css"</span> type=<span class="string">"text/css"</span>&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>HTML准备</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"thumb"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">“photo.jpg”</span>  <span class="attr">id</span> =<span class="string">“target”/</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>js代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">  a. 插入脚本</div><div class="line">&lt;script type =“text / javascript”&gt;</div><div class="line">  $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">       $(<span class="string">'#target'</span>)Jcrop();</div><div class="line">  &#125;)();</div><div class="line">       &lt;<span class="regexp">/script&gt;</span></div><div class="line"><span class="regexp">  b. 指定选项</span></div><div class="line"><span class="regexp">$('#target').Jcrop(&#123;</span></div><div class="line"><span class="regexp">  setSelect: [ x,y,w,h ],/</span><span class="regexp">/指定裁剪框的大小及位置，x y:表示裁剪框的位置，w h:表示裁剪框的宽高</span></div><div class="line"><span class="regexp">  aspectRatio: 1, /</span><span class="regexp">/指定裁剪框的宽高比</span></div><div class="line"><span class="regexp">  boxWidth: 400,/</span><span class="regexp">/图片盒子的宽度</span></div><div class="line"><span class="regexp">  bgColor: 'red' /</span><span class="regexp">/指定裁剪框以外区域的背景</span></div><div class="line"><span class="regexp">&#125;);</span></div><div class="line"><span class="regexp">  c. 开启缩略图功能</span></div><div class="line"><span class="regexp">$('#target').Jcrop(&#123;</span></div><div class="line"><span class="regexp">  setSelect: [ x,y,w,h ],/</span><span class="regexp">/指定裁剪框的大小及位置，x y:表示裁剪框的位置，w h:表示裁剪框的宽高</span></div><div class="line"><span class="regexp">  aspectRatio: 1, /</span><span class="regexp">/指定裁剪框的宽高比</span></div><div class="line"><span class="regexp">  boxWidth: 400,/</span><span class="regexp">/图片盒子的宽度</span></div><div class="line"><span class="regexp">  bgColor: 'red' /</span><span class="regexp">/指定裁剪框以外区域的背景</span></div><div class="line"><span class="regexp">&#125;function () &#123;</span></div><div class="line"><span class="regexp">           thumbnail = this.initComponent('Thumbnailer', &#123;width: 240, height: 120&#125;);/</span><span class="regexp">/加载缩略图</span></div><div class="line"><span class="regexp">           var init = this.getSelection();/</span><span class="regexp">/获取初始状态</span></div><div class="line"><span class="regexp">           console.log(init);</span></div><div class="line"><span class="regexp">           x = init.x;</span></div><div class="line"><span class="regexp">           y = init.y;</span></div><div class="line"><span class="regexp">           w = init.w;</span></div><div class="line"><span class="regexp">           h = init.h;</span></div><div class="line"><span class="regexp">         &#125;);</span></div><div class="line"><span class="regexp">  d. 监听事件（获取裁剪框的x,y,w,h动态值）</span></div><div class="line"><span class="regexp"> var x, y, w, h;</span></div><div class="line"><span class="regexp">$('#target').on('cropmove',function(e,s,c)&#123;</span></div><div class="line"><span class="regexp">  console.log(c);   /</span><span class="regexp">/ 打印的值为&#123; x: 10, y: 10, x2: 30, y2: 30, w: 20, h: 20 &#125;</span></div><div class="line"><span class="regexp">  x = parseInt(c.x);</span></div><div class="line"><span class="regexp">         y = parseInt(c.y);</span></div><div class="line"><span class="regexp">         w = parseInt(c.w);</span></div><div class="line"><span class="regexp">         h = parseInt(c.h);</span></div><div class="line"><span class="regexp">&#125;);</span></div></pre></td></tr></table></figure>
</li>
<li><p>css代码<br>若要调整缩略图的样式可在css样式中添加以下的类名</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.jcrop-thumb</span> &#123;</div><div class="line">          <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">          <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">       &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>代码示例</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x, y, w, h;</div><div class="line">$(<span class="string">'#target'</span>).Jcrop(&#123;</div><div class="line">           setSelect: [<span class="number">0</span>, <span class="number">0</span>, <span class="number">10000</span>, <span class="number">10000</span>],</div><div class="line">           aspectRatio: <span class="number">2</span>,<span class="comment">//裁切框的宽高比</span></div><div class="line">           boxWidth: <span class="number">400</span>,<span class="comment">//图片盒子的宽度</span></div><div class="line">           bgColor: <span class="string">'red'</span>,</div><div class="line">       &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">           thumbnail = <span class="keyword">this</span>.initComponent(<span class="string">'Thumbnailer'</span>, &#123;<span class="attr">width</span>: <span class="number">240</span>, <span class="attr">height</span>: <span class="number">120</span>, <span class="attr">parent</span>: <span class="string">".thumb"</span>&#125;);<span class="comment">//加载缩略图</span></div><div class="line">           <span class="keyword">var</span> init = <span class="keyword">this</span>.getSelection();<span class="comment">//获取初始状态</span></div><div class="line">           <span class="built_in">console</span>.log(init);</div><div class="line">           x = init.x;</div><div class="line">           y = init.y;</div><div class="line">           w = init.w;</div><div class="line">           h = init.h;</div><div class="line">       &#125;);</div><div class="line">         <span class="keyword">var</span> container = $(<span class="string">'#original_img'</span>).Jcrop(<span class="string">'api'</span>).container;</div><div class="line">         container.on(<span class="string">'cropcreate cropmove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e, s, c</span>) </span>&#123;</div><div class="line">           x = <span class="built_in">parseInt</span>(c.x);</div><div class="line">           y = <span class="built_in">parseInt</span>(c.y);</div><div class="line">           w = <span class="built_in">parseInt</span>(c.w);</div><div class="line">           h = <span class="built_in">parseInt</span>(c.h);</div><div class="line">       &#125;);</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="三、自己对Jcrop的源码进行了一点点的优化"><a href="#三、自己对Jcrop的源码进行了一点点的优化" class="headerlink" title="三、自己对Jcrop的源码进行了一点点的优化"></a>三、自己对Jcrop的源码进行了一点点的优化</h3><p> 由于直接使用Jcrop会报一个跨域错误，同时缩略图框位置不好调,对于要将缩略图放在其他盒子的需求无法实现，为此对其源码进行了一点优化</p>
<ol>
<li>打开Jcrop.js文件查找“jcrop-thumb”字段,让代码页面跳到如下图位置：<img src="/2016/12/10/Jcrop2-x（图片剪裁）插件使用教程/code.png" alt="[代码优化]" title="[代码优化]"></li>
<li><p>将该位置的代码改为如下代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.element = $(<span class="string">'&lt;div /&gt;'</span>).addClass(<span class="string">'jcrop-thumb'</span>)</div><div class="line">         .width(<span class="keyword">this</span>.width).height(<span class="keyword">this</span>.height)</div><div class="line">         .append(<span class="keyword">this</span>.preview)</div><div class="line">         .appendTo($(<span class="keyword">this</span>.parent)||<span class="keyword">this</span>.core.container);</div><div class="line">       &#125;</div><div class="line">$(<span class="keyword">this</span>.parent):为缩略图对象添加一个parent属性，用作：存放缩略图将要添加的父元素的选择器</div></pre></td></tr></table></figure>
<p>使用：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x, y, w, h;</div><div class="line">$(<span class="string">"#btn_Jcrop"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"> </div><div class="line">  <span class="keyword">if</span> ($(<span class="keyword">this</span>).text() == <span class="string">"裁切图片"</span>) &#123;</div><div class="line">    $(<span class="keyword">this</span>).text(<span class="string">"保存图片"</span>);</div><div class="line">    $(<span class="string">'#original_img'</span>).Jcrop(&#123;</div><div class="line">      setSelect: [<span class="number">0</span>, <span class="number">0</span>, <span class="number">10000</span>, <span class="number">10000</span>],</div><div class="line">      aspectRatio: <span class="number">2</span>,<span class="comment">//裁切框的宽高比</span></div><div class="line">      boxWidth: <span class="number">400</span>,<span class="comment">//图片盒子的宽度</span></div><div class="line">      bgColor: <span class="string">'red'</span>,</div><div class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      thumbnail = <span class="keyword">this</span>.initComponent(<span class="string">'Thumbnailer'</span>, &#123;<span class="attr">width</span>: <span class="number">240</span>, <span class="attr">height</span>: <span class="number">120</span>, <span class="attr">parent</span>: <span class="string">".thumb"</span>&#125;);<span class="comment">//加载缩略图</span></div><div class="line">      <span class="keyword">var</span> init = <span class="keyword">this</span>.getSelection();<span class="comment">//获取初始状态</span></div><div class="line">      <span class="built_in">console</span>.log(init);</div><div class="line">      x = init.x;</div><div class="line">      y = init.y;</div><div class="line">      w = init.w;</div><div class="line">      h = init.h;</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>优化报跨域错误的问题<br>a. 找到Jcrop.js代码的1761行<br>b. 将里面的代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="keyword">this</span>.core.ui.stage, cxt = s.context;</div><div class="line"><span class="keyword">this</span>.context.putImageData(cxt.getImageData(<span class="number">0</span>,<span class="number">0</span>,s.canvas.width,s.canvas.height),<span class="number">0</span>,<span class="number">0</span>);</div></pre></td></tr></table></figure>
<p>c . 用try{}catch (e){}包裹，结果如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">         <span class="keyword">var</span> s = <span class="keyword">this</span>.core.ui.stage, cxt = s.context;</div><div class="line">         <span class="keyword">this</span>.context.putImageData(cxt.getImageData(<span class="number">0</span>,<span class="number">0</span>,s.canvas.width,s.canvas.height),<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">       &#125;<span class="keyword">catch</span> (e)&#123;&#125;</div></pre></td></tr></table></figure>
<p>至此跨域错误优化完成，可以放心的使用了。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> JQuery </category>
            
            <category> Jcrop </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Echarts（图表）插件的使用]]></title>
      <url>/2016/10/16/echarts%EF%BC%88%E5%9B%BE%E8%A1%A8%EF%BC%89%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>#Echarts</p>
<blockquote>
<p>ECharts 提供了常规的折线图，柱状图，散点图，饼图，K线图，用于统计的盒形图，用于地理数据可视化的地图，热力图，线图，用于关系数据可视化的关系图，treemap，多维数据可视化的平行坐标，还有用于 BI 的漏斗图，仪表盘，并且支持图与图之间的混搭。<br><a href="http://echarts.baidu.com/" target="_blank" rel="external">官网</a></p>
<p><a href="http://echarts.baidu.com/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts" target="_blank" rel="external">文档</a></p>
<p><a href="https://github.com/ecomfe/echarts" target="_blank" rel="external">github地址</a></p>
<p>##Echarts的使用</p>
<ul>
<li>引入echarts文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"echarts.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<ul>
<li><p>HTML结构</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>js代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span> 基于准备好的dom对象，初始化echarts实例</div><div class="line"><span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</div><div class="line"></div><div class="line"><span class="number">2.</span> 指定图表的配置项和数据</div><div class="line"><span class="keyword">var</span> option = &#123;</div><div class="line">   title: &#123;</div><div class="line">     text: <span class="string">'ECharts 入门示例'</span>  </div><div class="line">   &#125;,</div><div class="line">   tooltip: &#123;&#125;,</div><div class="line">   legend: &#123;</div><div class="line">     data: [<span class="string">'销量'</span>]</div><div class="line">   &#125;,</div><div class="line">   xAxis: &#123;</div><div class="line">     data: [<span class="string">"衬衫"</span>, <span class="string">"羊毛衫"</span>, <span class="string">"雪纺衫"</span>, <span class="string">"裤子"</span>, <span class="string">"高跟鞋"</span>, <span class="string">"袜子"</span>]</div><div class="line">   &#125;,</div><div class="line">   yAxis: &#123;&#125;,</div><div class="line">   series: [&#123;</div><div class="line">     name: <span class="string">'销量'</span>,</div><div class="line">     type: <span class="string">'bar'</span>,</div><div class="line">     data: [<span class="number">5</span>, <span class="number">20</span>, <span class="number">36</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">20</span>]</div><div class="line">    &#125;]</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="number">3.</span> 使用刚指定的配置项和数据显示图表。</div><div class="line">myChart.setOption(option);</div></pre></td></tr></table></figure>
</li>
<li><p>基本参数</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title:图表标题</div><div class="line">legend：图例</div><div class="line">xAxis：横轴数据项</div><div class="line">yAxis：纵轴数据</div><div class="line">series：横轴每项数据</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> JavaScript </category>
            
            <category> echarts </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ckeditor（富文本编辑）插件的使用教程]]></title>
      <url>/2016/08/06/ckeditor%EF%BC%88%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%EF%BC%89%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="ckeditor的使用"><a href="#ckeditor的使用" class="headerlink" title="ckeditor的使用"></a>ckeditor的使用</h1><blockquote>
<p>富文本编辑器，Rich Text Editor, 简称 RTE, 它提供类似于 Microsoft Word 的编辑功能，容易被不会编写 HTML 的用户并需要设置各种文本格式的用户所喜爱。比较流行的富文本编辑器有：国外的ckeditor， 国内的ueditor。<br><a href="https://ckeditor.com/" target="_blank" rel="external">ckeditor官网</a><br><a href="https://github.com/galetahub/ckeditor/" target="_blank" rel="external">github地址</a></p>
<p><a href="https://docs.ckeditor.com/#!/guide" target="_blank" rel="external">官方文档</a></p>
</blockquote>
<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ul>
<li>html代码</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>引入文件</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--不依赖jquery--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'ckeditor/ckeditor.js'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用插件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CKEDITOR.replace( <span class="string">'demo'</span> );</div></pre></td></tr></table></figure>
<ul>
<li>同步文本域内容</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> ( instance <span class="keyword">in</span> CKEDITOR.instances ) &#123;</div><div class="line">   CKEDITOR.instances[instance].updateElement();</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> ckeditor </category>
            
            <category> ckeditor </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[require.js(模块化）使用教程]]></title>
      <url>/2016/07/06/require-js-%E6%A8%A1%E5%9D%97%E5%8C%96%EF%BC%89%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="模块化的标准"><a href="#模块化的标准" class="headerlink" title="模块化的标准"></a>模块化的标准</h1><p>有了模块，我们就可以更方便地使用别人的代码,想要什么功能，就加载什么模块。这样做有一个前提，那就是大家必须以同样的方式编写模块，否则你有你的写法，我有我的写法，岂不是乱了套！ 【螺丝与螺帽】</p>
<ul>
<li>CommonJS：是一个模块化的标准，Node.js在使用的模块化标准。适用与后端开发的标准。</li>
<li>AMD（Async Module Definition）：在CommonJS基础上衍生出来的适用于前端开发的模块化标准。<ul>
<li>特点：预加载，第一次访问时，将所有的文件都加载出来。</li>
<li>优点：第一次访问完成以后，再次访问速度会很快</li>
<li>缺点：第一次加载，需要的时间会比较长</li>
<li>代表：requirejs</li>
</ul>
</li>
<li>CMD（Common Module Definition）：在CommonJS基础上衍生出来的适用于前端开发的模块化标准。<ul>
<li>特点：懒加载，只有使用到的时候，才会加载对应的模块。</li>
<li>优点：第一次访问速度会比较快</li>
<li>缺点：再次访问其他模块时会比较慢。</li>
<li>代表：seajs  </li>
</ul>
</li>
</ul>
<h1 id="require-JS"><a href="#require-JS" class="headerlink" title="require.JS"></a>require.JS</h1><h2 id="require-js概念"><a href="#require-js概念" class="headerlink" title="require.js概念"></a>require.js概念</h2><p>requirejs是AMD规范的一个实现，require.js是一个javascript文件，也是一个模块加载器。<strong>模块加载器：相当于canvas中封装的图片加载器，只不过一个是加载图片的，一个加载js，文件的类型不一样。</strong> </p>
<p><a href="http://requirejs.org/" target="_blank" rel="external">官网地址</a></p>
<p><a href="https://github.com/requirejs/requirejs" target="_blank" rel="external">github地址</a></p>
<p>requirejs主要提供两大功能：</p>
<ul>
<li>加载模块：可以加载AMD规范的模块，也可以是普通的模块，异步加载，并且能够管理模块之间的依赖。</li>
<li>规范了模块的定义：有助于不同模块之间的共享与依赖。</li>
</ul>
<p>requirejs的优点：</p>
<ul>
<li>提高了javascript文件的加载速度，避免不必要的堵塞。</li>
<li>独特的模块定义方式可以避免全局变量污染。</li>
<li>独特的模块定义方式可以在脚本层面声明模块之间的依赖。</li>
</ul>
<h2 id="requirejs初体验"><a href="#requirejs初体验" class="headerlink" title="requirejs初体验"></a>requirejs初体验</h2><p><strong>一、引入js文件</strong> </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--1. 引入require.js文件--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"require.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>二、定义模块</strong> </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//在a.js文件中</span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">"a模块加载了"</span>);</div></pre></td></tr></table></figure>
<p><strong>三、引用模块</strong> </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//require会自动找当前目录下的js文件，a是文件名，不能写后缀。</span></div><div class="line"><span class="built_in">require</span>([<span class="string">"a"</span>]);</div></pre></td></tr></table></figure>
<h2 id="API详解"><a href="#API详解" class="headerlink" title="API详解"></a>API详解</h2><p>requirejs一共对外暴露三个全局变量 </p>
<ol>
<li>requirejs  - 用于加载模块</li>
<li>require     - 用于加载模块</li>
<li>define      - 用于定义模块</li>
</ol>
<p><strong><code>require</code>和<code>requirejs</code>是同一个函数，类似于<code>$</code>和<code>jQuery</code>的关系</strong> </p>
<h3 id="require加载模块"><a href="#require加载模块" class="headerlink" title="require加载模块"></a>require加载模块</h3><ul>
<li>作用：加载模块（amd模块或者是普通模块）</li>
<li>加载普通模块，模块加载完是会执行一遍的。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//第一个参数：数组，需要加载的模块，异步加载的</span></div><div class="line"><span class="comment">//第二个参数：回调函数，在模块都加载完毕之后，回调函数才会执行</span></div><div class="line"><span class="comment">//require(["js/a", "js/b", "js/c"]);</span></div><div class="line"><span class="built_in">require</span>([<span class="string">"js/a"</span>, <span class="string">"js/b"</span>, <span class="string">"js/c"</span>],<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"我是最后执行的"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="define定义模块"><a href="#define定义模块" class="headerlink" title="define定义模块"></a>define定义模块</h3><p>使用define函数可以定义一个AMD规范的模块</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//第一个参数：模块的依赖</span></div><div class="line"><span class="comment">//第二个参数：模块的主体</span></div><div class="line">define([], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"a模块加载了"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>好处：require独特的定义方式，避免了全局变量的污染。</p>
<h3 id="模块之间的依赖"><a href="#模块之间的依赖" class="headerlink" title="模块之间的依赖"></a>模块之间的依赖</h3><p>在使用define定义一个模块时，如果模块依赖于另一个模块，我们可以通过define的第一个参数去指定。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//第一个参数：本模块依赖的模块列表  路径是以html的路径为基准</span></div><div class="line"><span class="comment">//第二个参数：模块的主体</span></div><div class="line">define([<span class="string">"js/a"</span>], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"a模块依赖与b模块"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>优点：可以在声明模块的时候就可以定义好依赖，那么使用的时候，就不用在管模块之间的依赖了。使用起来会更加的方便。</p>
<h3 id="模块的输出（对外暴露的东西）"><a href="#模块的输出（对外暴露的东西）" class="headerlink" title="模块的输出（对外暴露的东西）"></a>模块的输出（对外暴露的东西）</h3><p>如果模块仅仅是执行一些代码实现某个功能，那么直接引入该模块，实现对应的功能即可，不需要返回值。如果该模块的存在是为了提供一些方法、对象或者其他一些内容，那么这个模块需要返回值。</p>
<p>在定义模块的时候，我们通常需要对外返回一些内容，因为使用define定义模块，实质就是一个函数，因此可以使用<code>return</code>返回模块的输出。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">define([], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> util = &#123;</div><div class="line">    sayHello:<span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">"大家好，我是"</span>+name);</div><div class="line">    &#125;,</div><div class="line">    sleep:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">"好困啊，我想要睡觉"</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line">  <span class="comment">//通过return返回模块的输出</span></div><div class="line">  <span class="keyword">return</span> util;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>想要获取模块的输出，在function中传递形参即可。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//参数1：加载的模块列表</span></div><div class="line"><span class="comment">//参数2：模块加载完成后，会执行的回调函数,形参就是模块的返回值</span></div><div class="line"><span class="built_in">require</span>([<span class="string">"b"</span>], <span class="function"><span class="keyword">function</span> (<span class="params">util</span>) </span>&#123;</div><div class="line">  util.sayHello(<span class="string">"张三"</span>);</div><div class="line">  util.sleep();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>如果依赖于多个模块，应该怎么办？</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//1. 如果依赖于多个模块，并且多个模块都有输出，那么我们需要使用参数一一对应，</span></div><div class="line"><span class="comment">//2. 这样就可以获取到多个模块的输出了。</span></div><div class="line"><span class="comment">//3. 即便某个模块没有输出，我们也要指定一个参数占着位置。</span></div><div class="line"><span class="comment">//4. 通常我们会把有输出的模块写在前面，没有输出的模块写在后面。这样方便写参数。</span></div><div class="line"><span class="built_in">require</span>([<span class="string">"js/util"</span>, <span class="string">"js/common"</span>, <span class="string">"js/test"</span>], <span class="function"><span class="keyword">function</span> (<span class="params">util, demo</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(util);</div><div class="line">  <span class="built_in">console</span>.log(demo);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="配置路径和别名"><a href="#配置路径和别名" class="headerlink" title="配置路径和别名"></a>配置路径和别名</h3><ul>
<li>使用require来加载某个模块时，路径会以当前html文件作为参考。</li>
<li>require可以使用config来配置一些内容，比如基础路径</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>.config(&#123;</div><div class="line">  <span class="comment">//1. 配置所有模块的基础路径，该路径相对于引入了requirejs的html文件的路径。</span></div><div class="line">  <span class="comment">//2. 所有的路径都会自动的拼上baseUrl</span></div><div class="line">  baseUrl:<span class="string">"js/"</span>,</div><div class="line">  <span class="comment">//1. 给模块起别名，方便使用，在依赖的模块中也能使用</span></div><div class="line">  paths:&#123;</div><div class="line">    <span class="string">"common"</span>:<span class="string">"common/common"</span>,</div><div class="line">    <span class="string">"util"</span>:<span class="string">"util/util"</span>,</div><div class="line">    <span class="string">"test"</span>:<span class="string">"login/test"</span></div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"><span class="comment">//引入模块时，只需要直接引入模块的别名即可。</span></div><div class="line"><span class="built_in">require</span>([<span class="string">"common"</span>, <span class="string">"util"</span>, <span class="string">"test"</span>],<span class="function"><span class="keyword">function</span> (<span class="params">demo, util</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(demo);</div><div class="line">  <span class="built_in">console</span>.log(util);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="加载非AMD规范的模块"><a href="#加载非AMD规范的模块" class="headerlink" title="加载非AMD规范的模块"></a>加载非AMD规范的模块</h3><p>requirejs可以通过require函数加载模块。在加载不是AMD规范的模式时，会出现问题，需要做特殊的处理。</p>
<p>市面上有很多模块，并没有实现AMD模块化规范，没有实现模块化的模块也可以使用requirejs去加载，但是require加载时，仅仅会执行这个js文件，并不能帮助这个模块实现依赖的加载，也无法获取到这个模块的输出。</p>
<p>我们可以通过require.config为没实现AMD规范加载依赖项。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>.config(&#123;</div><div class="line">  baseUrl:<span class="string">"js/"</span>,</div><div class="line">  path:&#123;</div><div class="line">    <span class="string">"base"</span>:<span class="string">"base"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="comment">//垫：配置普通模块的依赖与输出</span></div><div class="line">  shim:&#123;</div><div class="line">    <span class="string">"base"</span>:&#123;</div><div class="line">      <span class="comment">//配置普通模块的依赖项</span></div><div class="line">      deps:[<span class="string">"依赖项1"</span>,<span class="string">"依赖项2"</span>],</div><div class="line">      <span class="comment">//配置模块的输出</span></div><div class="line">      exports: <span class="string">"输出结果"</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="使用模块化加载jquery"><a href="#使用模块化加载jquery" class="headerlink" title="使用模块化加载jquery"></a>使用模块化加载jquery</h3><p>想使用模块化加载第三方库的时候，首先需要检查第第三方库是否支持模块化。</p>
<img src="/2016/07/06/require-js-模块化）使用教程/jquery.png" alt="[模块化]" title="[模块化]">
<p>如上图，说明这个第三方库是支持模块化的，可以直接使用require进行加载。</p>
<p>具名模块与匿名模块</p>
<p>define声明时，第一个参数可以是该模块的名字，如果声明了模块名，在配置时，模块别名就不能够调整了。</p>
<p><a href="http://www.2cto.com/kf/201410/344627.html" target="_blank" rel="external">requireJS的匿名模块和命名模块的差别和最佳实践</a></p>
]]></content>
      
        <categories>
            
            <category> JavaScript </category>
            
            <category> DOM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jquery.form（form表单提交）插件的使用教程]]></title>
      <url>/2016/05/06/jquery-form%EF%BC%88form%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%EF%BC%89%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="jquery-form插件的使用"><a href="#jquery-form插件的使用" class="headerlink" title="jquery.form插件的使用"></a>jquery.form插件的使用</h1><p>核心方法：<code>ajaxSubmit</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"form"</span>).submit(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="comment">//异步提交代码</span></div><div class="line">  $(<span class="string">"form"</span>).ajaxSubmit(&#123;</div><div class="line">    type:<span class="string">"post"</span>,</div><div class="line">    url:<span class="string">"01-php.php"</span>,</div><div class="line">    data:&#123;</div><div class="line">      id:<span class="string">"11111"</span></div><div class="line">    &#125;,</div><div class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">info</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(info);</div><div class="line">    &#125;,</div><div class="line">    error:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">"服务器错误"</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> JQuery </category>
            
            <category> form </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jquery.cookie（操作cookie）插件使用教程]]></title>
      <url>/2016/04/06/jquery-cookie%EF%BC%88%E6%93%8D%E4%BD%9Ccookie%EF%BC%89%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="jquery操作cookie"><a href="#jquery操作cookie" class="headerlink" title="jquery操作cookie"></a>jquery操作cookie</h1><p>jquery.cookie.js插件是一个专门用于操作cookie的一个插件，使用起来非常的方便和简单。</p>
<p><a href="https://plugins.jquery.com/cookie/" target="_blank" rel="external">官方网站</a></p>
<p><a href="https://plugins.jquery.com/cookie/" target="_blank" rel="external">github地址</a></p>
<ul>
<li>设置cookie</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置一个会话级别的cookie，浏览器关闭就消失</span></div><div class="line">$.cookie(<span class="string">'name'</span>, <span class="string">'value'</span>);</div><div class="line"></div><div class="line"><span class="comment">//设置一个7天有效期的cookie</span></div><div class="line"><span class="comment">//expires也可以指定一个具体的过期时间</span></div><div class="line">$.cookie(<span class="string">'name'</span>, <span class="string">'value'</span>, &#123; <span class="attr">expires</span>: <span class="number">7</span> &#125;);</div><div class="line"></div><div class="line"><span class="comment">//设置cookie的有效期和路径</span></div><div class="line">$.cookie(<span class="string">'name'</span>, <span class="string">'value'</span>, &#123; <span class="attr">expires</span>: <span class="number">7</span>, <span class="attr">path</span>: <span class="string">'/'</span> &#125;);</div></pre></td></tr></table></figure>
<ul>
<li>获取cookie</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//如果存在，返回对应的值</span></div><div class="line">$.cookie(<span class="string">'name'</span>); <span class="comment">// =&gt; "value"</span></div><div class="line"><span class="comment">//如果不存在，返回undefined</span></div><div class="line">$.cookie(<span class="string">'nothing'</span>); <span class="comment">// =&gt; undefined</span></div><div class="line"></div><div class="line"><span class="comment">//获取所有的额cookie</span></div><div class="line">$.cookie(); <span class="comment">// =&gt; &#123; "name": "value" &#125;</span></div></pre></td></tr></table></figure>
<ul>
<li>移除cookie</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 移除cookie，如果成功，返回true，否则false</span></div><div class="line">$.removeCookie(<span class="string">'name'</span>); <span class="comment">// =&gt; true</span></div><div class="line">$.removeCookie(<span class="string">'nothing'</span>); <span class="comment">// =&gt; false</span></div><div class="line"></div><div class="line"><span class="comment">// 如果路径不同时，需要指定路径</span></div><div class="line">$.cookie(<span class="string">'name'</span>, <span class="string">'value'</span>, &#123; <span class="attr">path</span>: <span class="string">'/'</span> &#125;);</div><div class="line"><span class="comment">// 移除失败</span></div><div class="line">$.removeCookie(<span class="string">'name'</span>); <span class="comment">// =&gt; false</span></div><div class="line"><span class="comment">// 移除成功</span></div><div class="line">$.removeCookie(<span class="string">'name'</span>, &#123; <span class="attr">path</span>: <span class="string">'/'</span> &#125;); <span class="comment">// =&gt; true</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> JQuery </category>
            
            <category> cookie </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jquery.region省市区三级联动插件的使用教程]]></title>
      <url>/2016/03/20/jquery-region%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="jquery-region插件"><a href="#jquery-region插件" class="headerlink" title="jquery.region插件"></a>jquery.region插件</h1><blockquote>
<p>jquery.region是一个省市区三级联动的jquery插件</p>
</blockquote>
<ul>
<li>html结构</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- id必须指定，不然没有效果 --&gt;</span></div><div class="line">  <span class="comment">&lt;!-- data-id:可以不指定，如果指定了，那么页面加载时就会显示对应的省份 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"province"</span> <span class="attr">data-id</span>=<span class="string">"360000"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"city"</span> <span class="attr">data-id</span>=<span class="string">"360700"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"town"</span> <span class="attr">data-id</span>=<span class="string">"360730"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>引入js文件</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-region/jquery.region.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用jquery插件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".demo"</span>).region(&#123;</div><div class="line">  url:<span class="string">"jquery-region/region.json"</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> JQuery </category>
            
            <category> region </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Uploadify文件上传插件使用教程]]></title>
      <url>/2016/03/06/uploadify%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="uploadify插件"><a href="#uploadify插件" class="headerlink" title="uploadify插件"></a>uploadify插件</h1><blockquote>
<p>Uploadify是jQuery的一个文件上传插件，带有上传进度条。（easy to implement, highly customizable）</p>
<p><a href="http://www.uploadify.com/" target="_blank" rel="external">官网</a></p>
<p><a href="https://docs.ckeditor.com/#!/guide/dev_installation" target="_blank" rel="external">官方文档</a></p>
</blockquote>
<h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ul>
<li>html结构</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file_upload_1"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>引入文件</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--如果想要样式，那就需要引入, 非必须--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"uploadify/uploadify.css"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--必须引入以下两个文件--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"uploadify/jquery.uploadify.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用插件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">   $(<span class="string">"#file_upload_1"</span>).uploadify(&#123;</div><div class="line">     height        : <span class="number">30</span>,<span class="comment">//高度</span></div><div class="line">     swf           : <span class="string">'uploadify/uploadify.swf'</span>,<span class="comment">//通过swf上传，这个必须指定</span></div><div class="line">     uploader      : <span class="string">'uploadify/uploadify.php'</span>,<span class="comment">//图片上传的服务端地址。</span></div><div class="line">     width         : <span class="number">120</span><span class="comment">//宽度</span></div><div class="line">   &#125;);</div><div class="line"> &#125;);</div></pre></td></tr></table></figure>
<ul>
<li>常用参数解释</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">buttonClass； 指定给上传按钮添加的类名</div><div class="line">buttonCursor： 默认<span class="string">'hand'</span>  , 指定光标形状， <span class="string">'hand'</span>或者<span class="string">'arrow'</span></div><div class="line">buttonText： 指定按钮的文本内容</div><div class="line">fileObjName： 指定上传的这个表单框的name属性，后端才能获取到。</div><div class="line">fileSizeLimit： 指定文件大小限制</div><div class="line">fileTypeExts：指定上传文件的后缀名。</div><div class="line">itemTemplate: 指定上传时的html结构</div><div class="line">formData: 指定文件上传时的form表单参数</div></pre></td></tr></table></figure>
<p>更多参数，参考<a href="http://www.uploadify.com/documentation/" target="_blank" rel="external">官方文档</a></p>
<ul>
<li>常用事件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">onUploadSuccess: 上传成功时触发</div><div class="line">onUploadError： 上传失败时触发。</div></pre></td></tr></table></figure>
<ul>
<li>代码示例<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#upfile"</span>).uploadify(&#123;</div><div class="line">    auto: <span class="literal">true</span>,</div><div class="line">    width: <span class="number">70</span>,</div><div class="line">    height: <span class="number">30</span>,</div><div class="line">    buttonClass:<span class="string">"btn btn-success btn-sm button_upfile"</span>,</div><div class="line">    buttonText: <span class="string">"选择图片"</span>,</div><div class="line">    fileTypeExts: <span class="string">'*.gif; *.jpg; *.png'</span>,</div><div class="line">    swf: <span class="string">'/public/assets/uploadify/uploadify.swf'</span>,</div><div class="line">    uploader: <span class="string">'/api/uploader/cover'</span>,</div><div class="line">    fileObjName: <span class="string">"cs_cover_original"</span>,</div><div class="line">    itemTemplate:<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>,</div><div class="line">    formData:&#123;</div><div class="line">       cs_id:cs_id</div><div class="line">    &#125;,</div><div class="line">    onUploadSuccess: <span class="function"><span class="keyword">function</span> (<span class="params">file, data</span>) </span>&#123;</div><div class="line">       data = <span class="built_in">JSON</span>.parse(data);     </div><div class="line">       <span class="comment">//设置图片</span></div><div class="line">       $(<span class="string">".preview img"</span>).attr(<span class="string">"src"</span>, data.result.path);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> JQuery </category>
            
            <category> uploadify </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JQuery中ajax的全局事件]]></title>
      <url>/2015/11/28/JQuery%E4%B8%ADajax%E7%9A%84%E5%85%A8%E5%B1%80%E4%BA%8B%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h1 id="JQ中AJAX的全局事件"><a href="#JQ中AJAX的全局事件" class="headerlink" title="JQ中AJAX的全局事件"></a>JQ中AJAX的全局事件</h1><blockquote>
<p>ajax提供了6个全局函数，会被页面中所有的ajax请求触发，在不同时间点会触发不同的全局事件。</p>
</blockquote>
<p>在页面中会有很多的ajax请求，但是这些ajax请求都有相同的消息机制，比如我们需要在ajax请求发送之前弹出了一个提示框，提示”正在读取数据….” 在ajax请求成功时显示”获取数据成功…”,在ajax结束后隐藏提示框。如果不使用全局事件，那么需要在每一个ajax的beforeSend、success、complete回调函数中都加上相同的代码。</p>
<ul>
<li>jquery的全局事件需要给document注册（固定写法）</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ajaxStart(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"ajaxStart在开始一个ajax请求时触发"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>全局事件的执行时机</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span> ajaxStart在开始一个ajax请求时触发</div><div class="line"></div><div class="line"><span class="comment">//beforeSend回调函数</span></div><div class="line"><span class="number">2.</span> ajaxSend在beforeSend回调函数之后触发</div><div class="line"></div><div class="line"><span class="comment">//success回调函数</span></div><div class="line"><span class="number">3.</span> ajaxSuccess在success回调函数之后触发</div><div class="line"></div><div class="line"><span class="comment">//error</span></div><div class="line"><span class="number">4.</span> ajaxError在error回调函数之后触发</div><div class="line"></div><div class="line"><span class="comment">//complete</span></div><div class="line"><span class="number">5.</span> ajaxComplete在complete回调函数之后触发</div><div class="line"></div><div class="line"><span class="number">6.</span> ajaxStop在ajax请求结束时触发</div></pre></td></tr></table></figure>
<ul>
<li><p>ajaxStart和ajaxStop 并不是在每次请求都触发，而是在一个批次的请求请求中触发一次。</p>
<ul>
<li><p>无论在何时发送 Ajax 请求，jQuery 都会检查是否存在其他 Ajax 请求。如果不存在，则 jQuery 会触发该 ajaxStart 事件</p>
</li>
<li><p>无论 Ajax 请求在何时完成 ，jQuery 都会检查是否存在其他 Ajax 请求。如果不存在，则 jQuery 会触发该 ajaxStop 事件。<a href="http://www.w3school.com.cn/jquery/ajax_ajaxstop.asp" target="_blank" rel="external">w3c</a></p>
</li>
</ul>
</li>
<li><p>如果某个ajax请求不希望触发全局事件，可以指定<code>global:false</code></p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">  type:<span class="string">"get"</span>,</div><div class="line">  url:<span class="string">"02-ajax.php"</span>,</div><div class="line">  <span class="comment">//指定了global为false之后，这个ajax请求就不会触发全局事件了。</span></div><div class="line">  global:<span class="literal">false</span>,</div><div class="line">  success:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"完成"</span>);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> JQuery </category>
            
            <category> Ajax </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nprogress进度条插件使用教程]]></title>
      <url>/2015/09/20/nprogress%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="进度条"><a href="#进度条" class="headerlink" title="进度条"></a>进度条</h1><h2 id="nprogress进度条插件"><a href="#nprogress进度条插件" class="headerlink" title="nprogress进度条插件"></a>nprogress进度条插件</h2><blockquote>
<p>nprogress插件是一个适用于ajax应用的轻量级的进度条插件。</p>
</blockquote>
<p><a href="http://ricostacruz.com/nprogress/" target="_blank" rel="external">官网</a></p>
<p><a href="https://github.com/rstacruz/nprogress" target="_blank" rel="external">github地址</a></p>
<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ul>
<li>引入js文件和css文件</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">'stylesheet'</span> <span class="attr">href</span>=<span class="string">'nprogress.css'</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'nprogress.js'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用进度条插件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//引入了nprogress.js文件后，就有了一个全局对象NProgress对象</span></div><div class="line"><span class="comment">//开启进度条</span></div><div class="line">NProgress.start();</div><div class="line"><span class="comment">//关闭进度条</span></div><div class="line">NProgress.done();</div></pre></td></tr></table></figure>
<h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><ul>
<li><p>添加到你调用 Ajax 的地方！绑定它到 jQuery <code>ajaxStart</code> 和 <code>ajaxStop</code> 事件上</p>
</li>
<li><p>如果不是ajax请求，也可以把它绑定到 <code>$(document).ready</code> 和<code>$(window).load</code></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> nprogress </category>
            
            <category> nprogress </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bootstrap-Datepicker使用教程]]></title>
      <url>/2015/09/10/bootstrap-datepicker%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h2 id="bootstrap-datepicker"><a href="#bootstrap-datepicker" class="headerlink" title="bootstrap-datepicker"></a>bootstrap-datepicker</h2><blockquote>
<p>bootstrap-datepicker插件依赖于bootstrap，bootstrap依赖jquery，提供了一个bootstrap风格的日期插件。</p>
<p><a href="https://github.com/uxsolutions/bootstrap-datepicker" target="_blank" rel="external">github地址</a>  </p>
<p><a href="http://bootstrap-datepicker.readthedocs.io/en/latest/" target="_blank" rel="external">官网地址</a></p>
</blockquote>
<ul>
<li>日期插件的目的</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span> 保证正确的日期格式</div><div class="line"><span class="number">2.</span> 用户使用更加方便。不用手动输入日期。</div></pre></td></tr></table></figure>
<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ul>
<li>引入css文件</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--如果引入这个css文件，需要依赖bootstrap的css文件--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"bootstrap-datepicker/bootstrap-datepicker3.css"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--这是datepicker独立的css文件，不需要依赖bootstrap的css文件--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"bootstrap-datepicker/bootstrap-datepicker3.standalone.css"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>引入js文件</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--bootstrap文件依赖于jquery--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--datepicker依赖于bootstrap--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--datepicker文件--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bootstrap-datepicker/bootstrap-datepicker.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--想要中文时，需要引入--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bootstrap-datepicker/bootstrap-datepicker.zh-CN.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用bootstrap-datepicker</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".date"</span>).datepicker();</div></pre></td></tr></table></figure>
<ul>
<li>常用配置</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".date"</span>).datepicker(&#123;</div><div class="line">  format:<span class="string">"yyyy-mm-dd"</span>,<span class="comment">//日期格式</span></div><div class="line">  autoclose:<span class="literal">true</span>,<span class="comment">//选完日期是否自动关闭，默认false</span></div><div class="line">  language:<span class="string">"zh-CN"</span>,<span class="comment">//指定语言，默认en，需要额外引入js文件</span></div><div class="line">  startDate:<span class="string">"-3d"</span>,<span class="comment">//指定开始时间，-3d:前三天</span></div><div class="line">  endDate:<span class="string">"+3d"</span>,<span class="comment">//指定结束时间，+3d:后三天</span></div><div class="line">  todayBtn:<span class="string">"linked"</span>,<span class="comment">//是否显示今日按钮</span></div><div class="line">  todayHighlight:<span class="literal">true</span><span class="comment">//是否让今天高亮显示</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> bootstrap-datepicker </category>
            
            <category> datepicker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git的分支操作、远程仓库与hexo搭建]]></title>
      <url>/2015/08/10/git%E7%9A%84%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C%E3%80%81%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E4%B8%8Ehexo%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="git分支操作"><a href="#git分支操作" class="headerlink" title="git分支操作"></a>git分支操作</h1><p>分支就是科幻电影里面的平行宇宙，当你正在电脑前努力学习Git的时候，另一个你正在另一个平行宇宙里努力学习SVN。</p>
<p>如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，你既学会了Git又学会了SVN！</p>
<img src="/2015/08/10/git的分支操作、远程仓库与hexo搭建/fenzhi.png" alt="[分支工作原理]" title="[分支工作原理]">
<h2 id="为什么要有分支？"><a href="#为什么要有分支？" class="headerlink" title="为什么要有分支？"></a><strong>为什么要有分支？</strong></h2><ul>
<li>如果你要开发一个新的功能，需要2周时间，第一周你只能写50%代码，如果此时立即提交，代码没写完，不完整的代码会影响到别人无法工作。如果等代码写完再提交，代码很容易丢失，风险很大。</li>
<li>有了分支，你就可以创建一个属于自己的分支，别人看不到，也不影响别人，你在自己的分支上工作，提交到自己的分支上，等到功能开发完毕，一次性的合并到原来的分支。这样既安全，又不影响他人工作。</li>
<li>在工作过程中，经常会碰到<strong>多任务并行开发</strong> 的情况，使用分支就能很好的避免任务之间的影响。</li>
<li>其他版本工具比如svn，cvs中也有分支这个概念，但是这些工具中的分支操作非常的慢，形同摆设。</li>
</ul>
<h2 id="分支操作的命令"><a href="#分支操作的命令" class="headerlink" title="分支操作的命令"></a>分支操作的命令</h2><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><ul>
<li><code>git branch 分支名称</code>创建分支，分支中的代码，在创建时与主分支的内容完全相同。</li>
<li>git在第一次提交时，就有了一个叫<code>master</code>的主分支。</li>
</ul>
<h3 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h3><ul>
<li><code>git branch</code>可以查看所有的分支，</li>
<li>在当前分支的前面会有一个</li>
</ul>
<h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><ul>
<li><code>git checkout 分支名称</code>切换分支</li>
<li>在当前分支的任何操作，都不会影响到其他的分支，除非进行了分支合并。</li>
<li>切换分支之前，<strong>必须保证代码已经提交了</strong> </li>
</ul>
<h3 id="创建并切换分支"><a href="#创建并切换分支" class="headerlink" title="创建并切换分支"></a>创建并切换分支</h3><ul>
<li>git checkout -b 分支名</li>
</ul>
<h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><ul>
<li><code>git branch -d 分支名称</code> 可以删除分支</li>
<li>注意：不能在当前分支删除当前分支，需要切换到其他分支才能删除。</li>
<li>注意：<code>master</code>分支是可以删除的，但是不推荐那么做。</li>
</ul>
<h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><ul>
<li><code>git merge 分支名称</code> 将其他分支的内容合并到当前分支。</li>
<li>在<code>master</code>分支中执行<code>git merge dev</code> 将<code>dev</code>分支中的代码合并到<code>master</code>分支</li>
</ul>
<h2 id="git分支的工作原理"><a href="#git分支的工作原理" class="headerlink" title="git分支的工作原理"></a>git分支的工作原理</h2><img src="/2015/08/10/git的分支操作、远程仓库与hexo搭建/git-branch.png" alt="[分支工作原理]" title="[分支工作原理]">
<h2 id="git合并冲突"><a href="#git合并冲突" class="headerlink" title="git合并冲突"></a>git合并冲突</h2><ul>
<li>对于同一个文件，如果有多个分支需要合并时，容易出现冲突。</li>
<li>合并分支时，如果出现冲突，只能手动处理，再次提交，一般的作法，把自己的代码放到冲突代码的后面即可。</li>
</ul>
<h1 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h1><p>所有的程序员都可以通过远程仓库来进行版本的共享，达到所有人的代码一致的效果。</p>
<h2 id="创建远程仓库（了解）"><a href="#创建远程仓库（了解）" class="headerlink" title="创建远程仓库（了解）"></a>创建远程仓库（了解）</h2><ul>
<li>创建远程仓库</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init --bare   # 创建一个裸仓库</div></pre></td></tr></table></figure>
<ul>
<li>远程仓库是一个裸仓库，只支持push、clone、pull等操作</li>
<li>裸仓库的目的是用来管理版本的共享。</li>
<li>裸仓库不支持add commit等操作。不进行任何的开发工作。</li>
<li>一般裸仓库的名称会以.git结尾</li>
</ul>
<h2 id="远程仓库相关的命令"><a href="#远程仓库相关的命令" class="headerlink" title="远程仓库相关的命令"></a>远程仓库相关的命令</h2><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><ul>
<li>作用：将本地代码提交到远程仓库</li>
<li><code>git push 仓库地址 master</code> 在代码提交到远程仓库，注意master分支必须写，不能省略</li>
<li>例子：<code>git push git@github.com:hucongcong/test.git master</code> 如果第一次使用，需要填写github的用户名和密码</li>
</ul>
<h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><ul>
<li>作用：将远程的代码下载到本地</li>
<li><code>git pull 代码地址 master</code> 将远程的代码中master分支下载到本地</li>
<li>通常在push前，需要先pull一次。</li>
</ul>
<h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h3><ul>
<li>作用：克隆远程仓库的代码到本地</li>
<li><code>git clone 仓库地址 自定义本地仓库名</code> 将整个仓库克隆到本地</li>
</ul>
<h3 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h3><p>每次push和pull操作都需要带上远程仓库的地址，非常的麻烦，我们可以给仓库地址设置一个别名</p>
<ul>
<li><code>git remote add 仓库别名 仓库地址</code> 使用仓库别名替代仓库地址。仓库别名相当于一个js变量，仓库地址就是对应的值。<ul>
<li><code>git remote add hucc git@github.com:hucongcong/test.git</code> 设置了一个hucc的仓库别名，以后push和pull都可以不用仓库地址，而用hucc</li>
</ul>
</li>
<li><code>git remote remove hucc</code> 删除hucc这个仓库别名。</li>
<li><code>git remote</code> 查看所有的仓库别名</li>
<li>如果使用了<code>git clone</code>命令从远程仓库获取下来的，那么这个本地仓库会自动添加一个 origin的远程地址，指向的就是克隆的远程地址。</li>
</ul>
<h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><p>git与github没有直接的关系。</p>
<ul>
<li>git是一个版本控制工具。</li>
<li>github是一个代码托管平台，是git的一个远程代码仓库。</li>
<li>将来工作时，公司会有自己的代码仓库。</li>
</ul>
<p><a href="https://github.com/" target="_blank" rel="external">github官网</a></p>
<p><a href="https://git.oschina.net/" target="_blank" rel="external">开源中国-git</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1. gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。</div><div class="line">2. github免费，代码所有人都能看到，但是只有你自己能修改。付费的可以隐藏。</div></pre></td></tr></table></figure>
<p>在github上创建一个项目，获取到仓库的地址。然后就可以将本地的代码推送到远程的服务器上。</p>
<h2 id="SSH免登陆"><a href="#SSH免登陆" class="headerlink" title="SSH免登陆"></a>SSH免登陆</h2><p>每次push代码，都需要输入用户名跟密码，非常的麻烦。因此我们可以配置一个SSH免登陆。</p>
<ul>
<li>github为了账户的安全，需要对每一次push请求都要验证用户的身份，只有合法的用户才可以push</li>
<li>使用ssh可以实现免密码操作（不需要使用密码）</li>
</ul>
<h3 id="对称加密与非对称加密（了解）"><a href="#对称加密与非对称加密（了解）" class="headerlink" title="对称加密与非对称加密（了解）"></a>对称加密与非对称加密（了解）</h3><p>对称加密：采用单钥密码系统的加密方法，同一个密钥可以同时用作信息的加密和解密，这种加密方法称为对称加密，也称为单密钥加密。</p>
<p>优点：算法公开、计算量小、加密速度快、加密效率高</p>
<img src="/2015/08/10/git的分支操作、远程仓库与hexo搭建/对称加密.jpg" alt="[对称加密]" title="[对称加密]">
<p>非对称加密：非对称加密算法需要两个密钥来进行加密和解密，这两个秘钥是公开密钥（public key，简称公钥）和私有密钥（private key，简称私钥）</p>
<p>公开密钥与私有密钥是一对，如果用公开密钥对数据进行加密，只有用对应的私有密钥才能解密；如果用私有密钥对数据进行加密，那么只有用对应的公开密钥才能解密。</p>
<p>优点：更安全，缺点：加密和解密花费时间长、速度慢，只适合对少量数据进行加密。</p>
<img src="/2015/08/10/git的分支操作、远程仓库与hexo搭建/非对称加密.jpg" alt="[非对称加密]" title="[非对称加密]">
<h3 id="ssh免登录的原理"><a href="#ssh免登录的原理" class="headerlink" title="ssh免登录的原理"></a>ssh免登录的原理</h3><img src="/2015/08/10/git的分支操作、远程仓库与hexo搭建/ssh免登陆.png" alt="[ssh免登陆]" title="[ssh免登陆]">
<h3 id="SSH免登录配置"><a href="#SSH免登录配置" class="headerlink" title="SSH免登录配置"></a>SSH免登录配置</h3><ul>
<li>1 创建SSH Key：<code>ssh-keygen -t rsa</code></li>
<li>2 在文件路径 <code>C:\用户\当前用户名\</code> 找到 <code>.ssh</code> 文件夹</li>
<li>3 文件夹中有两个文件：<ul>
<li>私钥：<code>id_rsa</code></li>
<li>公钥：<code>id_rsa.pub</code></li>
</ul>
</li>
<li>4 在 <code>github -&gt; settings -&gt; SSH and GPG keys</code>页面中，新创建SSH key</li>
<li>5 粘贴 公钥 <code>id_rsa.pub</code> 内容到对应文本框中</li>
<li>5 在github中新建仓库或者使用现在仓库，拿到<code>git@github.com:用户名/仓库名.git</code></li>
<li>6 此后，再次SSH方式与github“通信”，不用输入密码确认身份了</li>
</ul>
<h2 id="使用github-pages搭建博客"><a href="#使用github-pages搭建博客" class="headerlink" title="使用github pages搭建博客"></a>使用github pages搭建博客</h2><p><a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages </a>本用于介绍托管在 GitHub 的项目， 不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。</p>
<p>缺点：只能放静态页面，也就说github pages只能解析html、css、js，无法解析后端语言。</p>
<p>博客搭建步骤：</p>
<ol>
<li>在本地工作目录使用git初始化 <code>git init</code></li>
<li>创建自己的博客项目</li>
<li>将创建好的博客添加到暂存区 <code>git add [文件路径]</code></li>
<li>本地提交： <code>git commit -m &quot;第一个博客&quot;</code></li>
<li>在github上创建一个项目，项目名<code>用户名.github.io</code> 固定的</li>
<li>提交到github：<code>git push github仓库地址 master</code></li>
<li>查看github中对应的仓库中，是不是提交到了</li>
<li>访问：用户名.github.io</li>
</ol>
<h2 id="hexo创建博客（了解）"><a href="#hexo创建博客（了解）" class="headerlink" title="hexo创建博客（了解）"></a>hexo创建博客（了解）</h2><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ul>
<li>安装hexo</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div><div class="line"></div><div class="line">hexo -v  # 查看hexo的版本信息</div></pre></td></tr></table></figure>
<ul>
<li>初始化博客</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 新建一个目录  blog</div><div class="line">hexo init  # 初始化</div></pre></td></tr></table></figure>
<ul>
<li>生成静态页面</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate   # 生成静态页面	</div><div class="line">hexo g          # 生成静态页面（简写）</div></pre></td></tr></table></figure>
<ul>
<li>启动服务</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server   # 启动服务</div></pre></td></tr></table></figure>
<ul>
<li>访问站点</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http:<span class="comment">//localhost:4000/  # 通过这个地址就可以访问了</span></div></pre></td></tr></table></figure>
<h3 id="hexo常见命令"><a href="#hexo常见命令" class="headerlink" title="hexo常见命令"></a>hexo常见命令</h3><ul>
<li><code>hexo n &#39;博客标题&#39;</code>创建一篇新的博客</li>
<li><code>hexo g</code> 生成博客</li>
<li><code>hexo d</code> 发布博客</li>
</ul>
<p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">hexo中文文档</a></p>
]]></content>
      
        <categories>
            
            <category> Git/Github/blog </category>
            
            <category> 分支操作/远程仓库/hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git使用基础教程]]></title>
      <url>/2015/08/08/git%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="shell-bash"><a href="#shell-bash" class="headerlink" title="shell+bash"></a>shell+bash</h1><h2 id="shell基本概念"><a href="#shell基本概念" class="headerlink" title="shell基本概念"></a>shell基本概念</h2><blockquote>
<p>在计算机科学中，Shell俗称壳，是指“提供使用者使用界面”的软件（命令解析器）、比如window系统的cmd、linux系统中的bash。<strong>它可以接受用户的命令，然后调用响应的应用程序。</strong> </p>
</blockquote>
<img src="/2015/08/08/git基础教程/shell.jpg" alt="[shell]" title="[shell]">
<p>创建文件、移动文件、调用计算器等计算机功能最终都依赖于计算机的硬件，用户无法直接操作这些硬件。但是我们可以通过shell，输入响应的命令，就可以让计算机调用响应的硬件去执行响应的操作。因此我们把shell叫做壳。</p>
<p><strong>shell的实质就是一个软件，它可以接收用户的命令，然后调用计算机相应的应用程序</strong></p>
<h2 id="shell分类"><a href="#shell分类" class="headerlink" title="shell分类"></a>shell分类</h2><ol>
<li>图形界面shell：通过提供友好的可视化界面，调用相应应用程序，如windows系列操作系统，Linux系统上的图形化应用程序GNOME、KDE等。</li>
<li>命令行shell：通过键盘输入特定命令的方式，调用相应的应用程序，<ul>
<li>windows系统的cmd.exe、PowerShell</li>
<li>Linux系统的Bourne shell ( sh)、Bourne Again shell ( bash)等。</li>
</ul>
</li>
</ol>
<p><strong>图形界面shell操作方便，直观，但是更加消耗计算机的性能。命令行shell因为不用渲染界面，效率更高，在linux服务器上使用非常的广泛</strong> </p>
<h2 id="关于bash"><a href="#关于bash" class="headerlink" title="关于bash"></a>关于bash</h2><blockquote>
<p>bash是linux操作系统默认的命令行shell。windows系统中并不支持bash。</p>
<p>想要在windows中使用bash，需要安装软件，这个软件<strong>模拟集成</strong> 了bash的大部分命令。</p>
</blockquote>
<h2 id="常见的bash命令"><a href="#常见的bash命令" class="headerlink" title="常见的bash命令"></a>常见的bash命令</h2><ol>
<li>在任意文件夹中，都可以使用右键，通过git bash here打开命令行窗口，此时的路径就是当前目录。</li>
<li>窗口上右键，通过options–&gt;Text–&gt;select可以调整字体的大小。</li>
</ol>
<ul>
<li>路径操作</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cd 改变目录  （change directory）</span></div><div class="line"><span class="built_in">cd</span> images   <span class="comment">#进入images文件夹</span></div><div class="line"><span class="built_in">cd</span> ..      <span class="comment">#进入上一层目录</span></div><div class="line"><span class="built_in">cd</span> ~       <span class="comment">#进入用户根目录</span></div><div class="line"></div><div class="line"><span class="comment"># tab  自动补全，当我们输命令或者目录很长时，可以使用tab键进行自动补全。</span></div><div class="line"><span class="comment"># 按两次tab，会把所有符合要求的内容都列出来。</span></div><div class="line"></div><div class="line"><span class="comment"># pwd 打印当前目录的路径 （print work directory）</span></div><div class="line"><span class="built_in">pwd</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ls 展示当前目录列表（list）</span></div><div class="line">ls         <span class="comment"># 展示当前目录</span></div><div class="line">ls -a      <span class="comment"># 展示全部内容，包括隐藏文件</span></div><div class="line">ls -l      <span class="comment"># 以列表的形式展示内容</span></div><div class="line">ls -al     <span class="comment"># 以列表的形式展示所有的内容，包括隐藏文件。</span></div><div class="line">ls --<span class="built_in">help</span>  <span class="comment"># 查看ls所有的参数。</span></div><div class="line">ls -l images   <span class="comment"># 展示images目录下的文件，如果没有写目录，默认展示当前目录。</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># clear reset清屏</span></div><div class="line">clear  <span class="comment"># 清除屏幕内容，滚动条，保留了历史</span></div><div class="line">reset  <span class="comment"># 重置，历史记录没了。</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># mkdir  创建一个文件夹 （make directory）</span></div><div class="line">mkdir css          <span class="comment"># 创建一个css的文件夹</span></div><div class="line">mkdir css img js   <span class="comment"># 创建了三个文件夹</span></div><div class="line"></div><div class="line"><span class="comment"># rmdir  删除一个空的文件夹（没啥用）</span></div><div class="line">rmdir img   <span class="comment"># 删除文件夹</span></div><div class="line"></div><div class="line"><span class="comment"># touch  创建文件</span></div><div class="line">touch index.html   <span class="comment">#创建了一个index.html文件</span></div><div class="line">touch css/index.css <span class="comment"># 在css目录下创建idnex.css文件</span></div><div class="line"></div><div class="line"><span class="comment"># rm 删除一个文件获取文件夹</span></div><div class="line">rm index.html <span class="comment"># 删除index.html文件</span></div><div class="line">rm js         <span class="comment"># 删除空的js文件夹</span></div><div class="line">rm -r css     <span class="comment"># 递归删除一个文件夹</span></div><div class="line"></div><div class="line"><span class="comment"># mv 移动文件（move）</span></div><div class="line">mv index.html js            <span class="comment"># 将html文件移动到js文件夹中</span></div><div class="line">mv index.html index2.html   <span class="comment"># 将index.html重命名为index2.html</span></div><div class="line"></div><div class="line"><span class="comment"># cp 复制文件（cp）</span></div><div class="line">cp index.html index2.html   <span class="comment"># 复制index.html文件，命名为index2.html</span></div><div class="line">cp -r css css02             <span class="comment"># 如果复制的是文件夹，需要使用-r参数。</span></div><div class="line"></div><div class="line"><span class="comment"># cat 查看文件全部内容</span></div><div class="line">cat index.html</div><div class="line"><span class="comment"># less 查看文件部分内容</span></div><div class="line">less index.html</div><div class="line"><span class="comment"># q退出查看</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#  &gt;  重定向  将输出结果重定向到某个文件中</span></div><div class="line">ls &gt; info.text                   <span class="comment"># 将list的结果重定向到info.text文件中</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"hello world"</span> &gt; info.text   <span class="comment"># 将hello world重定向到info.text文件中 会覆盖原来的内容</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"hello world1"</span> &gt;&gt; info.text <span class="comment"># 将hello world1追加到info.text文件中。</span></div></pre></td></tr></table></figure>
<p><a href="http://www.techug.com/post/a-murder.html" target="_blank" rel="external">rm -rf/ 又引发了一个血案</a></p>
<h2 id="vi编辑器"><a href="#vi编辑器" class="headerlink" title="vi编辑器"></a>vi编辑器</h2><p><strong>vi编辑器的使用了解即可，除非真正在linux环境，不然是用不到的</strong>  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi info.txt  <span class="comment"># 使用vi编辑器打开info.txt文件，如果该文件不存在，将会被创建。</span></div></pre></td></tr></table></figure>
<p>vi编辑器的三种模式：</p>
<img src="/2015/08/08/git基础教程/vi3model.png" alt="[vi编辑器的三种模式]" title="[vi编辑器的三种模式]">
<p><strong>命令模式</strong> </p>
<p>使用vi命令，默认进入的是命令模式，此时是无法编辑的。使用<code>a</code>或者<code>i</code>可以进入输入模式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 进入编辑模式，</span></div><div class="line">i <span class="comment">#光标前面插入（insert）</span></div><div class="line">I <span class="comment">#行首插入</span></div><div class="line">a <span class="comment">#光标后插入（append）</span></div><div class="line">A <span class="comment">#行末插入</span></div><div class="line">o <span class="comment">#当前行下面插入新行</span></div><div class="line">O <span class="comment">#当前行上面插入新行</span></div><div class="line"></div><div class="line"><span class="comment"># 保存并退出，大写</span></div><div class="line">ZZ</div><div class="line"></div><div class="line"><span class="comment"># 辙销操作，可多次使用</span></div><div class="line">u</div><div class="line"></div><div class="line"><span class="comment"># 删除当前行</span></div><div class="line">dd</div><div class="line"></div><div class="line"><span class="comment"># 复制当前行</span></div><div class="line">yy</div><div class="line"></div><div class="line"><span class="comment"># 粘贴内容</span></div><div class="line">p</div><div class="line"></div><div class="line"><span class="comment"># 向前翻页</span></div><div class="line">ctrl+b</div><div class="line"></div><div class="line"><span class="comment"># 向后翻页</span></div><div class="line">ctrl+f</div></pre></td></tr></table></figure>
<p><strong>输入模式</strong> </p>
<p>在输入模式下，可以任意的输入内容</p>
<p>在输入模式下，按<code>esc</code>进入命令行模式。</p>
<p><strong>末行模式</strong> </p>
<p>插入模式无法直接进入末行模式。</p>
<p>在命令行模式下按下<code>shift+:</code>进入末行模式，在末行模式下，通常用来保存文件或者撤销保存</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使用 vi</span></div><div class="line">vi 文件路径</div><div class="line"></div><div class="line"><span class="comment"># 保存，</span></div><div class="line">:w </div><div class="line"><span class="comment"># :w filenme #另存为</span></div><div class="line"></div><div class="line"><span class="comment"># 退出</span></div><div class="line">:q</div><div class="line"></div><div class="line"><span class="comment"># 保存并退出</span></div><div class="line">:wq</div><div class="line"></div><div class="line"><span class="comment"># 撤销更改，返回到上一次保存的状态</span></div><div class="line">:e!</div><div class="line"></div><div class="line"><span class="comment"># 不保存强制退出</span></div><div class="line">:q!</div><div class="line"></div><div class="line"><span class="comment"># 展示行号</span></div><div class="line">:<span class="built_in">set</span> nu</div></pre></td></tr></table></figure>
<p>练习：在js的目录下新建一个文件，静夜思.txt，输入这首诗的内容，并且保存。</p>
<p><a href="http://www.linuxidc.com/Linux/2015-08/121506.htm" target="_blank" rel="external">Emacs和Vim：神的编辑器和编辑器之神</a></p>
<h1 id="版本控制工具"><a href="#版本控制工具" class="headerlink" title="版本控制工具"></a>版本控制工具</h1><h2 id="什么是版本控制系统？"><a href="#什么是版本控制系统？" class="headerlink" title="什么是版本控制系统？"></a>什么是版本控制系统？</h2><p>版本控制系统（Version Control System）:是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。版本控制系统不仅可以应用于软件源代码的文本文件，而且可以对任何类型的文件进行版本控制。</p>
<p>常见的版本控制系统有：svn、cvs、git</p>
<h2 id="为什么要有版本控制系统"><a href="#为什么要有版本控制系统" class="headerlink" title="为什么要有版本控制系统?"></a>为什么要有版本控制系统?</h2><ol>
<li>在开发过程中，经常需要对一个文件进行修改甚至删除，但是我们又希望能够保存这个文件的历史记录，如果通过备份，那么管理起来会非常的复杂。</li>
<li>在多人开发时，如果需要多人合作开发一个页面，那么修改以及合并也会非常的棘手。容易出现冲突。</li>
</ol>
<h2 id="版本控制系统分类"><a href="#版本控制系统分类" class="headerlink" title="版本控制系统分类"></a>版本控制系统分类</h2><p><strong>本地版本控制系统</strong></p>
<p>本地版本控制系统就是在一台机器上，记录版本的不同变化，保证内容不会丢失</p>
<p>缺点：如果多人开发，每个人都在不同的系统和电脑上开发，没办法协同工作。</p>
<img src="/2015/08/08/git基础教程/vcs.png" alt="[vcs]" title="[vcs]">
<p><strong>集中式版本控制系統</strong> </p>
<p>svn/cvs都是集中式的版本控制系统</p>
<ol>
<li>需要一个中央服务器来管理代码的的版本和备份</li>
<li>所有的用户电脑都是从中央服务器获取代码或者是将本地的代码提交到中央服务器</li>
<li>依赖与网络环境，如果连不上中央服务器，就无法提交和获取代码。</li>
<li>如果中央服务器宕机，所有人都无法工作。</li>
</ol>
<img src="/2015/08/08/git基础教程/jzs.png" alt="[jzs]" title="[jzs]">
<p><strong>分布式版本控制系统</strong> </p>
<p>git是分布式的版本控制系统。</p>
<ol>
<li>需要一台服务器作为代码仓库</li>
<li>每个用户电脑都是一个服务器，并且和代码仓库是镜像的，用户修改和获取代码都是提交到自己的服务器当中。</li>
<li>不需要网络就可以进行工作。</li>
<li>当连接网络时，用户可以选择将自己的服务器与代码仓库进行同步。</li>
</ol>
<img src="/2015/08/08/git基础教程/fbs.png" alt="[fbs]" title="[fbs]">
<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><h2 id="git介绍"><a href="#git介绍" class="headerlink" title="git介绍"></a>git介绍</h2><blockquote>
<p>Git是一款免费、开源的<strong>分布式</strong> <strong>版本控制系统</strong> ，用于敏捷高效地处理任何或小或大的项目。</p>
</blockquote>
<p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p>
<h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2><p><a href="https://git-scm.com/download/win" target="_blank" rel="external">下载地址</a></p>
<p>安装很简单，一直下一步即可。在任意的目录下右键，能够出现下图，表示安装成功了。</p>
<img src="/2015/08/08/git基础教程/gitinstall.png" alt="[gitinstall]" title="[gitinstall]">
<p>git是用法方式主要有两种，</p>
<ul>
<li>git gui，即图形化界面的方式</li>
<li>git bash，命令行的方式</li>
</ul>
<p><strong>bash是linux系统的命令，因此学习git前，我们先学习一下bash</strong> </p>
<h2 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h2><ol>
<li>初始化git仓库<code>git init</code></li>
<li>查看当前git仓库的状态<code>git status</code></li>
<li>将文件添加到git的暂存区<code>git add 文件名</code></li>
<li>将文件由暂存区提交到仓库区<code>git commit -m &#39;提交说明&#39;</code></li>
<li>查看提交日子<code>git log</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 初始化git仓库，会在当前目录生成一个隐藏文件夹 .git  不要去修改这个文件夹下的任意东西。</span></div><div class="line">git init</div><div class="line"></div><div class="line"><span class="comment"># 查看git的状态 ,如果此时新建一个文件，那么这个文件是没有被追踪的，说白了git还没有管理这个新建的文件</span></div><div class="line">git status </div><div class="line"></div><div class="line"><span class="comment"># 让git管理这个新建的文件</span></div><div class="line">git add index.html</div><div class="line"></div><div class="line"><span class="comment"># 让文件由暂存区提交到仓库区。此时文件才真正的被git管理了。</span></div><div class="line"><span class="comment"># </span></div><div class="line"><span class="comment"># 如果提交日志乱码，右键--&gt;options--&gt;Text--&gt;将编码改成utf-8</span></div><div class="line"></div><div class="line">git commit -m <span class="string">'第一次提交'</span></div><div class="line"></div><div class="line"><span class="comment"># 查看提交日志</span></div><div class="line">git <span class="built_in">log</span></div></pre></td></tr></table></figure>
<h2 id="配置邮箱和用户名"><a href="#配置邮箱和用户名" class="headerlink" title="配置邮箱和用户名"></a>配置邮箱和用户名</h2><p>如果第一次使用git，会要求设置用户名和邮箱</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># git config  user.name 你的目标用户名</span></div><div class="line"><span class="comment"># git config  user.email 你的目标邮箱名</span></div><div class="line"><span class="comment"># 这种配置方式只有在当前仓库生效</span></div><div class="line">git config user.name hcc</div><div class="line">git config user.email flycc@163.com</div><div class="line"></div><div class="line"><span class="comment"># 可以使用--global参数，配置全局的用户名和邮箱，这样别的git仓库就不需要重新配置了。</span></div><div class="line"><span class="comment"># 如果同时配置了局部的和全局的，那么局部的用户名和邮箱将会生效。</span></div><div class="line">git config  --global user.name hucc</div><div class="line">git config  --global user.email 111111@qq.com</div><div class="line"></div><div class="line"><span class="comment"># 查看配置信息</span></div><div class="line">git config --list</div></pre></td></tr></table></figure>
<h2 id="git的工作原理"><a href="#git的工作原理" class="headerlink" title="git的工作原理"></a>git的工作原理</h2><img src="/2015/08/08/git基础教程/gityl.png" alt="[gityl]" title="[gityl]">
<h2 id="git命令详解"><a href="#git命令详解" class="headerlink" title="git命令详解"></a>git命令详解</h2><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><ul>
<li>作用：将文件由 工作区 添加到 暂存区，暂存文件</li>
<li>命令：<code>git add 文件名</code><ul>
<li>例如： <code>git add index.html</code></li>
</ul>
</li>
<li><code>git add --all</code> 或者 <code>git add -A</code>（简写） 添加所有文件</li>
<li><code>git add a.txt b.txt</code> 同时添加两个文件</li>
<li><code>git add *.js</code> 添加当前目录下的所有js文件</li>
</ul>
<h3 id="git-checkout-文件名"><a href="#git-checkout-文件名" class="headerlink" title="git checkout 文件名"></a>git checkout 文件名</h3><ul>
<li>作用：暂存区的内容恢复到工作区。</li>
<li><code>git checkout 1.txt</code> 将暂存区中1.txt文件恢复到工作区</li>
</ul>
<h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h3><ul>
<li>作用：将文件由 暂存区 添加到  仓库区</li>
<li><code>git commit -m &quot;提交说明&quot;</code></li>
</ul>
<h3 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h3><ul>
<li>作用：查看文件的状态</li>
</ul>
<ul>
<li>命令：<code>git status</code></li>
<li>命令：<code>git stauts -s</code> 简化日志输出格式</li>
</ul>
<h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><ul>
<li>作用：查看提交日志</li>
<li><code>git log</code> 只能查看当前head以及以前的日志</li>
<li><code>git log --oneline</code> 简洁的日志信息</li>
<li><code>git reflog</code> 查看所有的提交变更日志</li>
</ul>
<h3 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h3><ul>
<li>作用：版本回退，将代码恢复到已经提交的某一个版本中。</li>
<li><code>git reset --hard 版本号</code> 将代码回退到某个指定的版本(版本号只要有前几位即可)</li>
<li><code>git reset --hard head~1</code>将版本回退到上一次提交<ul>
<li>~1:上一次提交</li>
<li>~2:上上次提交</li>
<li>~0:当前提交</li>
</ul>
</li>
</ul>
<h2 id="git忽视文件"><a href="#git忽视文件" class="headerlink" title="git忽视文件"></a>git忽视文件</h2><blockquote>
<p>在仓库中，有些文件是不想被git管理的，比如数据的配置密码、写代码的一些思路等。git可以通过配置从而达到忽视掉一些文件，这样这些文件就可以不用提交了。</p>
</blockquote>
<ul>
<li>在仓库的根目录创建一个<code>.gitignore</code>的文件，文件名是固定的。</li>
<li>将不需要被git管理的文件路径添加到<code>.gitignore</code>中</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 忽视idea.txt文件</span></div><div class="line">idea.txt</div><div class="line"></div><div class="line"><span class="comment"># 忽视.gitignore文件</span></div><div class="line">.gitignore</div><div class="line"></div><div class="line"><span class="comment"># 忽视css下的index.js文件</span></div><div class="line">css/index.js</div><div class="line"></div><div class="line"><span class="comment"># 忽视css下的所有的js文件</span></div><div class="line">css/*.js</div><div class="line"></div><div class="line"><span class="comment"># 忽视css下的所有文件</span></div><div class="line">css/*.*</div><div class="line"><span class="comment"># 忽视css文件夹</span></div><div class="line">css</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Git </category>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2015/07/06/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> Blog </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test]]></title>
      <url>/2015/07/06/test/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> JavaScript </category>
            
            <category> DOM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
